// <auto-generated />
using EmissorNSSuiteCSharp.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmissorNSSuiteCSharp.DAO.Migrations.SqliteMigrations
{
    [DbContext(typeof(NSSuiteContext))]
    partial class NSSuiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.COFINS", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("COFINS");
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.ICMS", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("AliqICMS")
                        .HasColumnType("REAL");

                    b.Property<double>("AliqICMSCred")
                        .HasColumnType("REAL");

                    b.Property<string>("CSOSN")
                        .HasColumnType("TEXT");

                    b.Property<string>("CST")
                        .HasColumnType("TEXT");

                    b.Property<double>("ValueICMSCred")
                        .HasColumnType("REAL");

                    b.HasKey("ProductId");

                    b.ToTable("ICMS");
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.ISSQN", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("ISSQN");
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.PIS", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("PIS");
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ApproximateAmountTaxas")
                        .HasColumnType("REAL");

                    b.Property<string>("BarCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessUnit")
                        .HasColumnType("TEXT");

                    b.Property<string>("CEST")
                        .HasColumnType("TEXT");

                    b.Property<string>("CFOP")
                        .HasColumnType("TEXT");

                    b.Property<string>("CalculationRule")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("NCM")
                        .HasColumnType("TEXT");

                    b.Property<string>("Origination")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductCode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("UnitaryValue")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.DAO.DataBase.Table.IPI", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.ToTable("IPI");
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.COFINS", b =>
                {
                    b.HasOne("EmissorNSSuiteCSharp.Banco.Tables.Product", "Product")
                        .WithOne("COFINS")
                        .HasForeignKey("EmissorNSSuiteCSharp.Banco.Tables.COFINS", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.ICMS", b =>
                {
                    b.HasOne("EmissorNSSuiteCSharp.Banco.Tables.Product", "Product")
                        .WithOne("ICMS")
                        .HasForeignKey("EmissorNSSuiteCSharp.Banco.Tables.ICMS", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.ISSQN", b =>
                {
                    b.HasOne("EmissorNSSuiteCSharp.Banco.Tables.Product", "Product")
                        .WithOne("ISSQN")
                        .HasForeignKey("EmissorNSSuiteCSharp.Banco.Tables.ISSQN", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.Banco.Tables.PIS", b =>
                {
                    b.HasOne("EmissorNSSuiteCSharp.Banco.Tables.Product", "Product")
                        .WithOne("PIS")
                        .HasForeignKey("EmissorNSSuiteCSharp.Banco.Tables.PIS", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EmissorNSSuiteCSharp.DAO.DataBase.Table.IPI", b =>
                {
                    b.HasOne("EmissorNSSuiteCSharp.Banco.Tables.Product", "Product")
                        .WithOne("IPI")
                        .HasForeignKey("EmissorNSSuiteCSharp.DAO.DataBase.Table.IPI", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
